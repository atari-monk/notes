{
  "sections": [
    {
      "title": "File",
      "chats": [
        {
          "indexTitle": "Format",
          "question": "Format",
          "answer": "Its a log of activity on micro_engine project:\n1. Section is month.year  \n    * 02.2024\n2. Index Title and Question is day  \n    * 19\n3. Answer contains activity type, time in pomodoros on it, numbered list of what was done   \n    * Refactoring, 3 pomodoros:\n        1. What was done\n        2. ...",
          "dateTime": "2024-02-19T13:56:33.456Z"
        }
      ]
    },
    {
      "title": "02.2024",
      "chats": [
        {
          "indexTitle": "19",
          "question": "19",
          "answer": "Refactoring, 3 pomodoros:  \n\n1. Rename file  BaseCollisionDetector to CollisionDetector  \n2. Refactor TopLeftCollisionDetector to use interface IStartable, same as CenterCollisionDetector  \n3. Rename interface ICollisionInfo to ICollision  \n4. Rename file ICollisionInfo to ICollision  \n5. Move file ICollisionEntity to collision folder  \n6. Modiffy ICollisionDetector, use ICollision in it, turned out it's not used currently  \n\nRefactoring, 3 pomodoros (1.5 standing):  \n\n1. Modiffy CollisionDetector to use ICollision  \n2. Refactor lib exports  \n3. Better names in ICollisionHandler  \n4. Rename in ICollisionHandler classes  \n5. Use ICollision in detector, new CenterCollision class  \n6. ICollision in systems  \n\nTutorial, 2 pomodoros:  \n\n1. Duplicating platforms to form level  \n2. Coding player movement controller  \n3. Removing friction, jumping only from ground (not in air)  \n\nRefactoring, 3 pomodoros:  \n\n1. New interface ICollisionAlgorithm  \n2. Implemented in both algorithms for center and top left point collision  \n3. In top left point collision vectors used in data",
          "dateTime": "2024-02-19T23:33:32.381Z"
        },
        {
          "indexTitle": "20",
          "question": "20",
          "answer": "Refactoring, 3 pomodoros:  \n\n1.  Refactored \"Axis-Aligned Bounding Box\" CenterCollision class, to use vectors in new IpRect interface, 2 methods added  \nMuch more readable, maintamable and so on, in one better  \n\nRefactoring, 3 pomodoros:  \n\n1. Yet another refactor of \"Axis-Aligned Bounding Box\" CenterCollision, removed IpRect, using IRect now, collision code is logical now  \n2. Moved api of collision system  \n3. Readed all code and minor refactors, rigidBody is used in handlers!, so do not remove, despite not in collision sytem strictlly  \n4. Updated notes documentig system for readablity (all files on one page) ",
          "dateTime": "2024-02-20T14:56:25.314Z"
        }
      ]
    }
  ]
}